{"version":3,"sources":["src/assets/media/fidelizaLogo.png","src/components/Containers/Center.jsx","src/components/Containers/SpaceBetween.jsx","src/components/Containers/ColumnSpaceBetween.jsx","src/components/Typografy/index.jsx","src/components/Button/index.jsx","src/components/Input/index.jsx","src/view/Autentication/Init.jsx","src/routes/stack.navigation.js","src/assets/theme/index.js","src/index.js","App.js"],"names":["module","exports","Center","children","style","View","flex","alignItems","justifyContent","SpaceBetween","flexDirection","ColumnSpaceBetween","marginVertical","Typografy","props","theme","color","size","bold","compressCenter","textAlign","onPress","gutten","Text","colors","red","white","black","colorTypografy","fontSize","typography","h1","h2","h3","text","small","title","fontSizeTypografy","paddingHorizontal","fontWeight","width","Dimensions","get","Button","backgroundcolor","gutter","buttonSize","backgroundColor","purple","dark","blue","background","TouchableOpacity","height","borderRadius","Input","state","setState","placeholder","colorPlaceholder","show","widthPercentage","keyboardType","colorDefultPlaceholder","percentage","TextInput","value","onChangeText","borderWidth","borderColor","secureTextEntry","placeholderTextColor","Init","handle","navigation","alert","useState","email","setEmail","password","setPassword","showPassword","setShowPassword","padding","Image","source","fidelizaLogo","resizeMode","Entypo","name","marginLeft","MainStack","createNativeStackNavigator","Navigation","screen","NavigationContainer","Navigator","initialRouteName","screenOptions","headerShown","Screen","component","withTheme","Views","React","createElement","DefaultTheme","myOwnProperty","roundness","App"],"mappings":"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","file":"static/js/app.443e5f4a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fidelizaLogo.bc5fd976.png\";","import React from 'react';\nimport { View } from 'react-native';\n\nconst Center = ({children, style}) => {\n  return (\n    <View\n        style={[{ \n            flex: 1, \n            alignItems: 'center', \n            justifyContent: 'center'\n        }, style]}\n    >\n        {children}\n    </View>\n  );\n}\n\nexport default Center;","import React from 'react';\nimport { View } from 'react-native';\n\nconst SpaceBetween = ({children, style = {}}) => {\n  return (\n    <View\n        style={[{ \n            flexDirection: \"row\"\n        },\n        style\n      ]} >\n        {children}\n    </View>\n  );\n}\n\nexport default SpaceBetween;","import React from 'react';\nimport { View } from 'react-native';\n\nconst ColumnSpaceBetween = ({children, style}) => {\n  return (\n    <View\n      style={[{\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        flex: 1,\n        marginVertical: 30,\n      }, style]}\n    >\n      {children}\n    </View>\n  );\n}\n\nexport default ColumnSpaceBetween;","import React from 'react';\nimport { Text } from 'react-native';\n\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  text: 'text',\n  small: 'small',\n  title: 'title'\n};\n\n\nconst Typografy = ({\n  children, \n  theme, \n  color, \n  size,\n  style,\n  bold,\n  compressCenter = false,\n  textAlign = 'center',\n  onPress=null,\n  gutten=false\n}, props) => {\n  \n  \n  const colorTypografy = (color) => {\n    switch (color) {\n      case 'red':\n        return theme.colors.red\n      case 'white':\n        return theme.colors.white\n      default:\n        return theme.colors.black\n    }\n  }\n\n  const fontSizeTypografy = (size) => {\n    switch (size) {\n      case 'h1':\n        return theme.typography.h1.fontSize\n      case 'h2':\n        return theme.typography.h2.fontSize\n      case 'h3':\n        return theme.typography.h3.fontSize\n      case 'text':\n        return theme.typography.text.fontSize\n      case 'small':\n        return theme.typography.small.fontSize\n      case 'title':\n        return theme.typography.title.fontSize\n      default:\n        return theme.typography.h3.fontSize\n    }\n  }\n\n  return (\n    <Text\n      onPress={onPress}\n      style={[{\n        color: colorTypografy(color),\n        fontSize: fontSizeTypografy(size),\n        textAlign: textAlign,\n      }, \n      compressCenter && {paddingHorizontal: 30},\n      bold && {fontWeight: \"500\"},\n      gutten && {marginVertical: 20},\n      style,\n    ]}\n    >\n        {children}\n    </Text>\n    );\n}\n\nexport default Typografy;","import React from 'react';\nimport { TouchableOpacity, Dimensions} from 'react-native';\nconst {width} = Dimensions.get('window')\n\n\nconst Button = ({\n  children, \n  theme, \n  style,\n  backgroundcolor,\n  onPress,\n  gutter,\n  buttonSize = .8\n}) => {\n  \n  const background = (color) => {\n    switch (color) {\n      case 'purple': theme.colors.purple\n        return \n      case 'dark': \n        return theme.colors.dark\n      default:\n        return theme.colors.blue\n    }\n  }\n\n  const backgroundColor = background(backgroundcolor)\n\n  return (\n    <TouchableOpacity\n      onPress={onPress}\n      style={[\n        {\n          width: width*buttonSize,\n          height: 45,\n          borderRadius: 30,\n          backgroundColor: backgroundColor,\n        },\n        gutter && {marginVertical: 20},\n        style,\n      ]}\n    >\n        {children}\n    </TouchableOpacity>\n    );\n}\n\nexport default Button;","import React from 'react';\nimport { View, TextInput, Dimensions } from 'react-native';\n\n// import { Container } from './styles';\nconst {width} = Dimensions.get('window')\n\nconst Input = ({\n  state,\n  setState,\n  placeholder = \"Inserir texto\",\n  colorPlaceholder ,\n  theme,\n  style,\n  gutter = false,\n  show = false,\n  widthPercentage = 8,\n  keyboardType = 'default'\n}) => {\n\n  const colorDefultPlaceholder = colorPlaceholder ? colorPlaceholder : theme.colors.black\n\n  const percentage = widthPercentage*0.1\n  return (\n    <TextInput \n      placeholder={placeholder}\n      value={state}\n      onChangeText={setState}\n      style={[\n        {\n          width: width*percentage ,\n          height: 45,\n          borderRadius: 30,\n          backgroundColor: theme.colors.white,\n          borderWidth: 2,\n          borderColor: theme.colors.white,\n          textAlign: \"center\",\n        },\n        style,\n        gutter && {marginVertical: 20},\n      ]}\n      secureTextEntry={show}\n      placeholderTextColor={colorDefultPlaceholder}\n      keyboardType={keyboardType}\n    />\n  );\n}\n\nexport default Input;","import React, {useState} from 'react';\nimport { View, Image} from \"react-native\";\nimport {\n  Containers,\n  Typografy,\n  Button,\n  Input\n} from \"../../components\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport { fidelizaLogo } from \"../../assets/media\";\nconst Init = ({ theme, navigation }) => {\n  \n  const handle = () => alert(\"clico foi?\")\n  \n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [showPassword, setShowPassword] = useState(false)\n  \n  return (\n    <Containers.Center>\n      <View\n        style={{\n          backgroundColor: theme.colors.blue,\n          borderRadius: 20,\n          padding: 10\n        }}\n      >\n      <Image \n        source={fidelizaLogo}\n        style={{\n          height: 133,\n          width: 267\n        }}\n        resizeMode='contain'\n      />\n      <Input \n        theme={theme}\n        state={email}\n        setState={setEmail}  \n        placeholder='Email'\n        gutter\n      />\n      <Containers.SpaceBetween\n        style={{\n          alignItems: \"center\",\n        }}>\n        <Input \n          theme={theme}\n          state={password}\n          setState={setPassword}  \n          placeholder='senha'\n          gutter\n          show={!showPassword}\n        />\n        <Entypo \n          name={!showPassword ? \"eye-with-line\":\"eye\" }\n          size={24} \n          color={theme.colors.white}\n          style={{\n            marginLeft: 5\n          }}\n          onPress={() => setShowPassword(!showPassword)}\n          />\n      </Containers.SpaceBetween>\n        <Button \n          theme={theme}\n          gutter\n          style={{\n            backgroundColor: theme.colors.purple\n          }}\n          onPress={() => handle()}\n          >\n          <Containers.Center>\n            <Typografy \n              size={'h3'}\n              color={'white'}\n              theme={theme}>\n              Entrar\n            </Typografy>\n          </Containers.Center>\n        </Button>\n      </View>\n\n      <Typografy \n        size={'h3'}\n        color={'white'}\n        theme={theme}>\n        ou\n      </Typografy>\n\n      <Button \n          theme={theme}\n          gutter\n          onPress={() => handle()}\n          backgroundcolor=\"dark\"\n          >\n          <Containers.Center>\n            <Typografy \n              size={'h3'}\n              color={'white'}\n              theme={theme}>\n              Reinvindicar uma fidelização\n            </Typografy>\n          </Containers.Center>\n        </Button>\n      <Button \n          theme={theme}\n          gutter\n          onPress={() => handle()}\n          backgroundcolor=\"dark\"\n          >\n          <Containers.Center>\n            <Typografy \n              size={'h3'}\n              color={'white'}\n              theme={theme}>\n              Recuperar senha\n            </Typografy>\n          </Containers.Center>\n        </Button>      \n    </Containers.Center>\n  );\n}\n\nexport default Init;","import React from \"react\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { NavigationContainer } from '@react-navigation/native';\nconst MainStack = createNativeStackNavigator();\nimport { withTheme } from \"react-native-paper\";\nimport * as Views from '../view';\n\nconst Navigation = () => {\n\n  const mount = (theme, screen) => {\n      return (props) => React.createElement(theme(screen))\n  }\n  \n\n  return(\n    <NavigationContainer>\n      <MainStack.Navigator\n        initialRouteName={'Fideliza'}\n        screenOptions={{ headerShown: false }}\n      >\n          <MainStack.Screen name='Fideliza'  component={mount(withTheme,Views.Autentication.Init)} />\n      </MainStack.Navigator>\n    </NavigationContainer>\n  );\n}\nexport default Navigation;\n","import { DefaultTheme } from 'react-native-paper';\n\nconst theme = {\n  ...DefaultTheme,\n  myOwnProperty: true,\n  roundness: 4,\n  colors: {\n    ...DefaultTheme.colors,\n    red: '#FA1407',\n    purple: '#A45EFF',\n    blue: '#66A1FF',\n    dark: '#5C5C5C',\n    white: \"#F5F5F5\",\n  },\n  typography: {\n    fontSize: 16,\n    h1: {\n      fontSize: 24,\n    },\n    h2: {\n      fontSize: 20,\n    },\n    h3: {\n      fontSize: 16,\n    },\n    text: {\n      fontSize: 18,\n    },\n    small: {\n      fontSize: 14,\n    },\n    title: {\n      fontSize: 55,\n    }\n  },\n};\n\nexport default theme;\n","import React, { useEffect, useState } from \"react\";\nimport Navigation from \"./routes/stack.navigation\";\nimport { Provider as PaperProvider } from \"react-native-paper\";\nimport theme from \"./assets/theme\";\n\nfunction App() {\n  return (\n    <PaperProvider theme={theme}>\n      <Navigation />\n    </PaperProvider>\n  );\n}\nexport default App;\n","import React from 'react';\nimport Application from \"./src\";\n\n\nexport default function App() {\n  return <Application />\n}\n"],"sourceRoot":""}